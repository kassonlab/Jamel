def callgromacsinrivanna():  from os import system as sys  sys('module load gcc/9.2.0 && module load cuda/11.0.228 && module load openmpi/3.1.6 && module load gcccuda/9.2.0_11.0.228 && module load goolfc/9.2.0_3.1.6_11.0.228 && module load gromacs/2021.2 && cd /scratch/jws6pq/Gromacs/')def OverallRMSD(Protein, Comparison='3merSARS2.pdb'):  from pymol import cmd  proteinpdb = Protein  cmd.load(Comparison, object='CP')  cmd.load(proteinpdb, object='Protein')  cmd.remove('organic')  cmd.load(proteinpdb)  RMSD = cmd.align('CP', 'Protein')[0]  cmd.delete('all')  return RMSDdef TruncateXTCfile(tprfile,xtcfile,newxtcfile,timestepinps):  from os import system as sys  sys('echo 1 0 | gmx_mpi trjconv -pbc cluster -f '+xtcfile+' -s '+tprfile+' -dt '+timestepinps+' -o '+newxtcfile)def CreatingPDBfromtrajectory(tprfile, xtcfile, newpdbfile, timefromsiminps):  from os import system as sys  sys('echo 1 1 | gmx_mpi trjconv -f '+xtcfile+' -center 1 -s '+tprfile+' -dump ' + timefromsiminps + ' -o '+newpdbfile)  sys('echo 1 1 | gmx_mpi trjconv -f '+newpdbfile+' -pbc mol -s '+tprfile+'  -o '+newpdbfile)def CreatingRMSFfile(Timestepinps,tprfile,xtcfile,newxvgfile):  from os import system as sys   sys('echo 3 1 | gmx_mpi rmsf -dt ' + Timestepinps + ' -f '+xtcfile+' -s '+tprfile+' -o '+newxvgfile+' -res -fit yes')  def AveragingMultimerrmsf(xvgfile,newxvgfile):  from itertools import groupby  Rmsfvalues=[tuple(x.split()) for x in open(xvgfile,'r').readlines() if x.split()[0].isdigit()]  Rmsfvalues.sort(key=lambda x:int(x[0]))  Sortedvalues=[list(group) for key,group in groupby(Rmsfvalues,lambda x: x[0])]  Averagedvalues=[sum([float(x[-1]) for x in y])/len(y) for y in Sortedvalues]  newxvgfile=open(newxvgfile,'w')  for line in Averagedvalues:    newxvgfile.write(str(line)+'\n')  newxvgfile.close()  def CreateatrajectorymoviePDB(tpr_file,xtc_file,new_pdb_file):  from os import system as sys  sys('echo 3 1 | gmx_mpi trjconv -s '+tpr_file+' -f '+xtc_file+' -o '+new_pdb_file+' -fit rot+trans')